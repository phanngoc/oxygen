@startuml Core Classes

' Define styling
skinparam classAttributeIconSize 0
skinparam backgroundColor white
skinparam classBorderColor #2c3e50
skinparam classArrowColor #2c3e50
skinparam stereotypeCBackgroundColor #f8f9fa

' Title
title Oxygen Protocol - Core Classes

' Define the core classes
class Pool {
  +asset_mint: Pubkey
  +asset_reserve: Pubkey
  +total_deposits: u64
  +total_borrows: u64
  +available_lending_supply: u64
  +cumulative_borrow_rate: u128
  +cumulative_lending_rate: u128
  +last_updated: i64
  +optimal_utilization: u64
  +loan_to_value: u64
  +liquidation_threshold: u64
  +liquidation_bonus: u64
  +borrow_fee: u64
  +flash_loan_fee: u64
  +host_fee_percentage: u8
  +protocol_fee_percentage: u8
  +lending_enabled: bool
  +max_lending_ratio: u64
  +min_lending_duration: u64
  +lending_fee: u64
  +lending_interest_share: u64
  +total_lent: u64
  +operation_state_flags: u8
  +price_oracle: Pubkey
  +last_oracle_price: u64
  +last_oracle_update: i64
  +bump: u8
  +user_deposits_authority: Pubkey
  +immutable: bool
  +admin_less: bool
  
  +update_rates(timestamp: i64): Result
  +get_utilization_rate(): u64
  +deposit_to_scaled(amount: u64): Result<u128>
  +update_utilization_rate(): Result
  +get_borrow_rate(): Result<u64>
  +get_lending_rate(): Result<u64>
  +verify_owner_signed(signer: &Signer): Result
  +verify_immutable(): Result
}

class UserPosition {
  +owner: Pubkey
  +collaterals: Vec<CollateralPosition>
  +borrows: Vec<BorrowPosition>
  +last_updated: i64
  +bump: u8
  
  +add_collateral(pool: Pubkey, amount: u64, scaled_amount: u128): Result
  +add_borrow(pool: Pubkey, amount: u64, scaled_amount: u128, interest_rate: u64): Result
  +calculate_health_factor(pool_data: &HashMap<Pubkey, (u64, u64)>): Result<u64>
}

class CollateralPosition {
  +pool: Pubkey
  +amount_deposited: u64
  +amount_scaled: u128
  +is_collateral: bool
  +is_lending: bool
  +deposit_timestamp: i64
}

class BorrowPosition {
  +pool: Pubkey
  +amount_borrowed: u64
  +amount_scaled: u128
  +interest_rate: u64
  +last_update: i64
}

class WalletIntegration {
  +{static} validate_owner_signed(owner_pubkey: &Pubkey, signer: &Signer): Result
  +{static} verify_wallet_origin(wallet_program_id: &Pubkey): Result
  +{static} get_transaction_metadata(transaction_data: &[u8]): Result<TransactionMetadata>
  +{static} validate_no_admin_operations(instruction_data: &[u8]): Result
}

class TransactionMetadata {
  +description: String
  +action_type: ActionType
  +requires_signature: bool
  +is_cancellable: bool
}

enum ActionType {
  UserInitiated
  ProtocolInitiated
  ThirdPartyInitiated
}

class YieldModule {
  +{static} calculate_yield(pool: &Pool, amount_scaled: u128): Result<u64>
  +{static} claim_yield(pool: &mut Pool, user_position: &mut UserPosition): Result<u64>
}

class InterestModule {
  +{static} calculate_borrow_interest(pool: &Pool, amount_scaled: u128): Result<u64>
  +{static} update_pool_rates(pool: &mut Pool, timestamp: i64): Result
}

class LiquidationModule {
  +{static} check_liquidation_eligibility(user_position: &UserPosition, pool_data: &HashMap): Result<bool>
  +{static} execute_liquidation(liquidator: &Pubkey, user_position: &mut UserPosition, pool: &mut Pool, repay_amount: u64): Result<u64>
  +{static} calculate_liquidation_amount(user_position: &UserPosition, pool_data: &HashMap, repay_amount: u64): Result<u64>
}

' Define relationships
Pool "1" -- "many" UserPosition : tracked in >
Pool "1" -- "many" CollateralPosition : references >
Pool "1" -- "many" BorrowPosition : references >

UserPosition "1" *-- "many" CollateralPosition : contains >
UserPosition "1" *-- "many" BorrowPosition : contains >

YieldModule ..> Pool : uses >
YieldModule ..> UserPosition : modifies >

InterestModule ..> Pool : updates >
InterestModule ..> BorrowPosition : calculates for >

LiquidationModule ..> UserPosition : monitors >
LiquidationModule ..> Pool : updates >

WalletIntegration ..> TransactionMetadata : creates >
TransactionMetadata *-- ActionType : contains >

' Add notes
note bottom of Pool
  Core lending pool account that tracks
  assets, rates, and protocol parameters
end note

note bottom of UserPosition
  Tracks a user's deposits, collateral,
  and borrows across all pools
end note

note right of WalletIntegration
  Ensures non-custodial operation by
  verifying wallet signatures and
  preventing unauthorized access
end note

note bottom of LiquidationModule
  Handles liquidation logic when
  positions fall below health thresholds
end note

@enduml